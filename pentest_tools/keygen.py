"""
Key pair generation for asymmetric encryption
"""
from Crypto import Random
from Crypto.PublicKey import RSA
import configparser

params = configparser.ConfigParser()
params.read('params.ini')

def generate_keys(modulus_length=None):
    # RSA modulus length must be a multiple of 256 and >= 1024
    if not modulus_length:
        modulus_length = int(input('Enter modulus length (big value, multiple of 256, preferably bigger than 1024): '))

    print('Key pair generation started. Depending on your modulus length {0}, it may take a while...'
          .format([modulus_length]))

    privatekey = RSA.generate(modulus_length, Random.new().read)
    publickey = privatekey.publickey()

    return privatekey, publickey


def main():
    priv, pub = generate_keys(int(params['RANSOM']['mod_len']))

    with open(params['RANSOM']['public'], 'wb') as pub_f:
        pub_f.write(pub.exportKey())

    with open(params['RANSOM']['private'], 'wb') as priv_f:
        priv_f.write(priv.exportKey())

    return None


if __name__ == "__main__":
    main()

    exit(0)
